{
	"name": "KQL script 1",
	"properties": {
		"content": {
			"query": "\n\n//                    [\\\n//               .----' `-----.\n//              //^^^^;;^^^^^^`\\\n//      _______//_____||_____()_\\________\n//     /212    :      : ___              `\\\n//    |>   ____;      ;  |/\\><|   ____   _<)\n//   {____/    \\_________________/    \\____}\n//        \\ '' /                 \\ '' /\n//         '--'                   '--'\n\n// Microsoft Developer - IoT Show: https://youtu.be/2aOa_S3Up0A\n// Azure Hour: https://youtu.be/D_AJk2lAepw\ntaxitriptable\n| count\n\ntaxitriptable\n| summarize min(pickup_datetime), max(pickup_datetime)\n\n\ntaxitriptable\n| summarize count() by bin( pickup_datetime , 1d)\n\n//time series chart\n//number of rides every 15 minutes in a 1 day period\n//query is running on 50K rows\n\ntaxitriptable\n| where pickup_datetime between (datetime(2013-01-13 00:00:00.0) .. datetime(2013-01-13 23:59:59.9))\n| make-series ridecount=count() on pickup_datetime from datetime(2013-01-13 00:00:00.0) to datetime(2013-01-13 23:59:59.9) step 15min\n| render timechart \n\n\n//Anomaly detection\ntaxitriptable\n| where pickup_datetime between (datetime(2013-01-12 00:00:00.0) .. datetime(2013-01-14 23:59:59.9))\n| make-series ridecount=count() on pickup_datetime from datetime(2013-01-13 00:00:00.0) to datetime(2013-01-13 23:59:59.9) step 15min\n| extend anomalies = series_decompose_anomalies(ridecount,1)\n| render anomalychart with(anomalycolumns=anomalies, title='anomalies on nyc taxi rides')\n\n// lower the threshold to find more anomalies \ntaxitriptable\n| make-series ridecount=count() on pickup_datetime from datetime(2013-01-13 00:00:00.0) to datetime(2013-01-13 16:00) step 15min\n| extend anomalies = series_decompose_anomalies(ridecount,0.5)\n| render anomalychart with(anomalycolumns=anomalies, title='anomalies on nyc taxi rides')\n\n// the anomaly is based on the deviation from the baseline compared to the actual (ridecount)\ntaxitriptable\n| make-series ridecount=count() on pickup_datetime from datetime(2013-01-13 00:00:00.0) to datetime(2013-01-13 16:15) step 15min\n| extend (anomalies, score, baseline) = series_decompose_anomalies(ridecount, 0.5)\n| mv-expand anomalies, pickup_datetime, ridecount, score, baseline\n| project anomalies = iff(toint(anomalies) == 0,int(null),toint(anomalies)), pickup_datetime, ridecount, score, baseline\n\n// join synapse SQL pool and data explorer pool to visualize in powerBI\nlet FaresData= evaluate sql_request(\n  'Server=tcp:micbxthup2nqlpf2pocws1.sql.azuresynapse.net,1433;' // my synapse data explorer pool\n    'Authentication=\"Active Directory Integrated\";'\n    'Initial Catalog=micbxthup2nqlpf2pocws1p1;', // my dw name\n  'select * from dbo.FaresData ');\nFaresData\n| project toguid(medallion), toguid(hack_license), tostring(vendor_id), todatetime(pickup_datetime), payment_type, todecimal(fare_amount)\n, todecimal(surcharge), todecimal(mta_tax), todecimal(tip_amount), todecimal(tolls_amount), todecimal(total_amount)\n| join kind=leftouter taxitriptable on $left.medallion == $right.medallion,  $left.hack_license == $right.hack_license,\n $left.vendor_id == $right.vendor_id, $left.pickup_datetime == $right.pickup_datetime \n \n// List of anomalies\ntaxitriptable\n| where pickup_datetime between (datetime(2013-01-12 00:00:00.0) .. datetime(2013-01-14 23:59:59.9))\n| make-series ridecount=count() on pickup_datetime from datetime(2013-01-13 00:00:00.0) to datetime(2013-01-13 23:59:59.9) step 15min\n| extend anomalies = series_decompose_anomalies(ridecount,1)\n| mv-expand ridecount, anomalies, pickup_datetime\n| where toint(anomalies)  <> 0\n| sort by todatetime(pickup_datetime)\n| take 10 ",
			"metadata": {
				"language": "kql"
			},
			"currentConnection": {
				"poolName": "adxpooltaxitrip",
				"databaseName": "taxitripdatabase"
			}
		},
		"type": "KqlQuery"
	}
}